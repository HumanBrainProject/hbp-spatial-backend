apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2020-01-29T10:42:20Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    selfLink: /apis/image.openshift.io/v1/namespaces/hbp-spatial-backend/imagestreams/flask
    uid: 06baee73-4284-11ea-89e4-fa163e061b5f
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2020-01-29T10:42:20Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    selfLink: /apis/build.openshift.io/v1/namespaces/hbp-spatial-backend/buildconfigs/flask
    uid: 06c5d5dd-4284-11ea-89e4-fa163e061b5f
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: flask:latest
    postCommit:
      script: |
        set -e
        # Without PIP_IGNORE_INSTALLED=0 the Debian version of pip would
        # re-install already installed dependencies in the user's home
        # directory
        # (https://github.com/pypa/pip/issues/4222#issuecomment-417672236)
        PIP_IGNORE_INSTALLED=0 python3 -m pip install --user -r test-requirements.txt
        cd /source
        python3 -m pytest tests/
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/HumanBrainProject/hbp-spatial-backend.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
        forcePull: true
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secretReference:
          name: github-webhook-secret
      type: GitHub
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2020-01-29T10:42:20Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    selfLink: /apis/apps.openshift.io/v1/namespaces/hbp-spatial-backend/deploymentconfigs/flask
    uid: 06cef084-4284-11ea-89e4-fa163e061b5f
  spec:
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: flask
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: flask
          deploymentconfig: flask
      spec:
        containers:
        - env:
          - name: INSTANCE_PATH
            value: /instance
          image: docker-registry.default.svc:5000/hbp-spatial-backend/flask
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          name: flask
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /instance
            name: volume-6c4ne
          - mountPath: /static-data
            name: volume-vjjd7
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: instance-dir
          name: volume-6c4ne
        - name: volume-vjjd7
          persistentVolumeClaim:
            claimName: static-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - flask
        from:
          kind: ImageStreamTag
          name: flask:latest
          namespace: hbp-spatial-backend
        lastTriggeredImage: docker-registry.default.svc:5000/hbp-spatial-backend/flask
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2020-01-29T10:42:20Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    selfLink: /api/v1/namespaces/hbp-spatial-backend/services/flask
    uid: 06d975d4-4284-11ea-89e4-fa163e061b5f
  spec:
    clusterIP: 172.30.20.217
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: flask
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2020-01-29T10:42:20Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    selfLink: /apis/route.openshift.io/v1/namespaces/hbp-spatial-backend/routes/flask
    uid: 0705d9b3-4284-11ea-89e4-fa163e061b5f
  spec:
    host: hbp-spatial-backend.apps.hbp.eu
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: flask
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: 2020-01-29T12:08:41Z
    name: static-data
    namespace: hbp-spatial-backend
    selfLink: /api/v1/namespaces/hbp-spatial-backend/persistentvolumeclaims/static-data
    uid: 16cede9f-4290-11ea-89e4-fa163e061b5f
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
- apiVersion: v1
  data:
    config.py: |
      CORS_ORIGINS = '*'
      PROXY_FIX = {
          'x_for': 1,
          'x_host': 1,
          'x_port': 1,
          'x_proto': 1,
      }
      DEFAULT_TRANSFORM_GRAPH = '/static-data/DISCO_20181004_sigV30_DARTEL_20181004_reg_x4/graph.yaml'
  kind: ConfigMap
  metadata:
    creationTimestamp: 2020-01-29T10:42:21Z
    name: instance-dir
    namespace: hbp-spatial-backend
    selfLink: /api/v1/namespaces/hbp-spatial-backend/configmaps/instance-dir
    uid: 072157df-4284-11ea-89e4-fa163e061b5f
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
