apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2019-09-12T14:07:48Z
    generation: 1
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    resourceVersion: "53775437"
    selfLink: /apis/image.openshift.io/v1/namespaces/hbp-spatial-backend/imagestreams/flask
    uid: b33a0094-d566-11e9-822a-fa163ea97e2e
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2019-09-12T14:07:48Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    resourceVersion: "53775345"
    selfLink: /apis/build.openshift.io/v1/namespaces/hbp-spatial-backend/buildconfigs/flask
    uid: b35b829c-d566-11e9-822a-fa163ea97e2e
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: flask:latest
    postCommit:
      script: |
        set -e
        python3 -m pip install --user /source[tests]
        cd /source
        python3 -m pytest
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/HumanBrainProject/hbp-spatial-backend.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
        forcePull: true
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secret: 27e0b84d966062ca
      type: Generic
    - github:
        secret: 58d5802cdd41a492
      type: GitHub
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2019-09-12T14:07:48Z
    generation: 3
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    resourceVersion: "53775562"
    selfLink: /apis/apps.openshift.io/v1/namespaces/hbp-spatial-backend/deploymentconfigs/flask
    uid: b368180f-d566-11e9-822a-fa163ea97e2e
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: flask
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: flask
          deploymentconfig: flask
      spec:
        containers:
        - env:
          - name: INSTANCE_PATH
            value: /instance
          image: docker-registry.default.svc:5000/hbp-spatial-backend/flask@sha256:8fe1cbce4c8cbf45792137be842adcf54991b2243948daa13833b316ffd4a859
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          name: flask
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /instance
            name: volume-6c4ne
          - mountPath: /static-data
            name: volume-vjjd7
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: instance-dir
          name: volume-6c4ne
        - name: volume-vjjd7
          persistentVolumeClaim:
            claimName: static-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - flask
        from:
          kind: ImageStreamTag
          name: flask:latest
          namespace: hbp-spatial-backend
        lastTriggeredImage: docker-registry.default.svc:5000/hbp-spatial-backend/flask@sha256:8fe1cbce4c8cbf45792137be842adcf54991b2243948daa13833b316ffd4a859
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2019-09-12T14:07:48Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    resourceVersion: "52986941"
    selfLink: /api/v1/namespaces/hbp-spatial-backend/services/flask
    uid: b3754372-d566-11e9-822a-fa163ea97e2e
  spec:
    clusterIP: 172.30.20.217
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: flask
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2019-09-12T14:07:48Z
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: static-data
    name: glusterfs-dynamic-002243cf-d494-11e9-acd7-fa163e8fd6a1
    namespace: hbp-spatial-backend
    resourceVersion: "52986944"
    selfLink: /api/v1/namespaces/hbp-spatial-backend/services/glusterfs-dynamic-002243cf-d494-11e9-acd7-fa163e8fd6a1
    uid: b39f7d4b-d566-11e9-822a-fa163ea97e2e
  spec:
    clusterIP: 172.30.23.17
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2019-09-12T14:07:56Z
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: static-data
    name: glusterfs-dynamic-b3c5c4a1-d566-11e9-822a-fa163ea97e2e
    namespace: hbp-spatial-backend
    resourceVersion: "52986972"
    selfLink: /api/v1/namespaces/hbp-spatial-backend/services/glusterfs-dynamic-b3c5c4a1-d566-11e9-822a-fa163ea97e2e
    uid: b872b4f6-d566-11e9-822a-fa163ea97e2e
  spec:
    clusterIP: 172.30.116.81
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2019-03-13T11:26:31Z
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: cross-template-transformations
    name: glusterfs-dynamic-cross-template-transformations
    namespace: hbp-spatial-backend
    resourceVersion: "18942713"
    selfLink: /api/v1/namespaces/hbp-spatial-backend/services/glusterfs-dynamic-cross-template-transformations
    uid: d9e6ea4c-4582-11e9-8fde-fa163ea97e2e
  spec:
    clusterIP: 172.30.112.176
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2019-09-12T14:07:48Z
    labels:
      app: flask
    name: flask
    namespace: hbp-spatial-backend
    resourceVersion: "52986948"
    selfLink: /apis/route.openshift.io/v1/namespaces/hbp-spatial-backend/routes/flask
    uid: b3b3bb5a-d566-11e9-822a-fa163ea97e2e
  spec:
    host: hbp-spatial-backend.apps.hbp.eu
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: flask
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/glusterfs
    creationTimestamp: 2019-03-13T11:26:25Z
    finalizers:
    - kubernetes.io/pvc-protection
    name: cross-template-transformations
    namespace: hbp-spatial-backend
    resourceVersion: "18942719"
    selfLink: /api/v1/namespaces/hbp-spatial-backend/persistentvolumeclaims/cross-template-transformations
    uid: d63a0a9e-4582-11e9-8fde-fa163ea97e2e
  spec:
    accessModes:
    - ReadOnlyMany
    resources:
      requests:
        storage: 5Gi
    storageClassName: glusterfs-storage
    volumeName: pvc-d63a0a9e-4582-11e9-8fde-fa163ea97e2e
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/glusterfs
    creationTimestamp: 2019-09-12T14:07:49Z
    finalizers:
    - kubernetes.io/pvc-protection
    name: static-data
    namespace: hbp-spatial-backend
    resourceVersion: "52986979"
    selfLink: /api/v1/namespaces/hbp-spatial-backend/persistentvolumeclaims/static-data
    uid: b3c5c4a1-d566-11e9-822a-fa163ea97e2e
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    storageClassName: glusterfs-storage
    volumeName: pvc-b3c5c4a1-d566-11e9-822a-fa163ea97e2e
- apiVersion: v1
  data:
    config.py: |
      CORS_ORIGINS = '*'
      PROXY_FIX = {
          'x_for': 1,
          'x_host': 1,
          'x_port': 1,
          'x_proto': 1,
      }
      DEFAULT_TRANSFORM_GRAPH = '/static-data/DISCO_20181004_sigV30_DARTEL_20181004_reg_x4/graph.yaml'
  kind: ConfigMap
  metadata:
    creationTimestamp: 2019-09-12T14:21:20Z
    name: instance-dir
    namespace: hbp-spatial-backend
    resourceVersion: "53926099"
    selfLink: /api/v1/namespaces/hbp-spatial-backend/configmaps/instance-dir
    uid: 9731a415-d568-11e9-822a-fa163ea97e2e
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
