# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# Default list of environments that are tested, unless -e or TOXENV are
# specified.
envlist = py36, py38, py310, codestyle, cov


[gh-actions]
# Remember to keep synchronized with .github/workflows/tox.yaml
python =
    3.6: py36
    3.8: py38, cov
    3.10: py310, codestyle

[testenv]
commands = pytest {posargs} tests/
# Remember to keep synchronized with tests_require in setup.py
deps =
    pytest
    requests

[testenv:cov]
commands = pytest --cov={envsitepackagesdir}/hbp_spatial_backend tests/
deps =
    {[testenv]deps}
    pytest-cov

[testenv:codestyle]
# pre-commit needs to clone Git repositories over https
passenv = http_proxy https_proxy no_proxy
commands = pre-commit run --all-files --cov-report=xml
deps =
    pre-commit

[flake8]
ignore =
    # E203 (whitespace before ':') has false positive for array slicings
    E203,
    # these are on the default ignore list
    E121, E126, E226, E133, E203, E241,
    # We want line-break *before* the operator (new PEP8 style similar to math)
    W503,
    # Give false positives when a name contains an uppercase acronym
    N802, N806

[coverage:run]
branch = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
